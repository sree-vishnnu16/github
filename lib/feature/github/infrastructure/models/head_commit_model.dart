import 'package:github/feature/github/domain/entities/head_commit.dart';
import 'package:json_annotation/json_annotation.dart';
import 'package:equatable/equatable.dart';

part 'head_commit_model.g.dart'; // Generated by build_runner

@JsonSerializable()
class HeadCommitModel extends Equatable {
  final String? sha; // Nullable for initial parsing safety
  final String? url; // Nullable for initial parsing safety

  const HeadCommitModel({
    this.sha,
    this.url,
  });

  @override
  List<Object?> get props => [sha, url];

  factory HeadCommitModel.fromJson(Map<String, dynamic> json) =>
      _$HeadCommitModelFromJson(json);

  Map<String, dynamic> toJson() => _$HeadCommitModelToJson(this);

  // Mappers to/from Entity
  HeadCommitEntity toEntity() {
    return HeadCommitEntity(
      sha: sha ?? '', // Provide default or handle nulls as per business logic
      url: url ?? '',
    );
  }

  factory HeadCommitModel.fromEntity(HeadCommitEntity entity) {
    return HeadCommitModel(
      sha: entity.sha,
      url: entity.url,
    );
  }
}